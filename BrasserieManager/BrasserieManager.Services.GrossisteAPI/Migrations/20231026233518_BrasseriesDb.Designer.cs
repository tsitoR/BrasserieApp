// <auto-generated />
using BrasserieManager.Services.GrossisteAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrasserieManager.Services.GrossisteAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231026233518_BrasseriesDb")]
    partial class BrasseriesDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrasserieManager.Services.BrasserieAPI.Models.Biere", b =>
                {
                    b.Property<int>("BiereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiereId"), 1L, 1);

                    b.Property<double>("Alcool")
                        .HasColumnType("float");

                    b.Property<int>("BrasserieId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("BiereId");

                    b.HasIndex("BrasserieId");

                    b.ToTable("Biere");

                    b.HasData(
                        new
                        {
                            BiereId = 1,
                            Alcool = 6.5,
                            BrasserieId = 1,
                            Nom = "Leffe blonde",
                            Prix = 1.5
                        });
                });

            modelBuilder.Entity("BrasserieManager.Services.BrasserieAPI.Models.Brasserie", b =>
                {
                    b.Property<int>("BrasserieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrasserieId"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrasserieId");

                    b.ToTable("Brasserie");

                    b.HasData(
                        new
                        {
                            BrasserieId = 1,
                            Nom = "Abbaye de Leffe"
                        },
                        new
                        {
                            BrasserieId = 2,
                            Nom = "Flying dodo"
                        });
                });

            modelBuilder.Entity("BrasserieManager.Services.GrossisteAPI.Models.BiereGrossiste", b =>
                {
                    b.Property<int>("BiereGrossisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiereGrossisteId"), 1L, 1);

                    b.Property<int>("BiereId")
                        .HasColumnType("int");

                    b.Property<int>("GrossisteId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("BiereGrossisteId");

                    b.HasIndex("BiereId");

                    b.HasIndex("GrossisteId");

                    b.ToTable("BiereGrossistes");

                    b.HasData(
                        new
                        {
                            BiereGrossisteId = 1,
                            BiereId = 1,
                            GrossisteId = 1,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("BrasserieManager.Services.GrossisteAPI.Models.Grossiste", b =>
                {
                    b.Property<int>("GrossisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrossisteId"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrossisteId");

                    b.ToTable("Grossistes");

                    b.HasData(
                        new
                        {
                            GrossisteId = 1,
                            Nom = "GeneDrinks"
                        });
                });

            modelBuilder.Entity("BrasserieManager.Services.BrasserieAPI.Models.Biere", b =>
                {
                    b.HasOne("BrasserieManager.Services.BrasserieAPI.Models.Brasserie", "Brasserie")
                        .WithMany()
                        .HasForeignKey("BrasserieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brasserie");
                });

            modelBuilder.Entity("BrasserieManager.Services.GrossisteAPI.Models.BiereGrossiste", b =>
                {
                    b.HasOne("BrasserieManager.Services.BrasserieAPI.Models.Biere", "Biere")
                        .WithMany()
                        .HasForeignKey("BiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrasserieManager.Services.GrossisteAPI.Models.Grossiste", "Grossiste")
                        .WithMany()
                        .HasForeignKey("GrossisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biere");

                    b.Navigation("Grossiste");
                });
#pragma warning restore 612, 618
        }
    }
}
